// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using pizza_data;

namespace pizza_data.Migrations
{
    [DbContext(typeof(OrdersDBContext))]
    [Migration("20200601063245_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4");

            modelBuilder.Entity("pizza_data.models.Pizza", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Picture")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Pizzas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Description",
                            Name = "Hawaiian",
                            Picture = "https://www.publicdomainpictures.net/pictures/270000/t2/pizza-1532881335pCX.jpg"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Description",
                            Name = "Peperoni",
                            Picture = "https://www.publicdomainpictures.net/pictures/300000/t2/pizza-1557512546UWH.jpg"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Description",
                            Name = "Irish",
                            Picture = "https://www.publicdomainpictures.net/pictures/120000/t2/pizza-1431957490WiY.jpg"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Description",
                            Name = "Strogonoff",
                            Picture = "https://www.publicdomainpictures.net/pictures/40000/t2/fresh-pizza.jpg"
                        },
                        new
                        {
                            Id = 5,
                            Description = "Description",
                            Name = "Corn",
                            Picture = "https://www.publicdomainpictures.net/pictures/340000/t2/pizza-food-picture-1589652491vsj.jpg"
                        },
                        new
                        {
                            Id = 6,
                            Description = "Description",
                            Name = "Hotdog",
                            Picture = "https://www.publicdomainpictures.net/pictures/10000/t2/pizza-topping-87127713332743Vt.jpg"
                        });
                });

            modelBuilder.Entity("pizza_data.models.PizzaOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("PizzaId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("PizzaId");

                    b.ToTable("PizzaOrders");
                });

            modelBuilder.Entity("pizza_data.models.PizzaOrderDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("PizzaOrderId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ToppingId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("PizzaOrderId");

                    b.HasIndex("ToppingId");

                    b.ToTable("PizzaOrderDetails");
                });

            modelBuilder.Entity("pizza_data.models.Topping", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int>("PizzaId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("PizzaId");

                    b.ToTable("Toppings");
                });

            modelBuilder.Entity("pizza_data.models.PizzaOrder", b =>
                {
                    b.HasOne("pizza_data.models.Pizza", "Pizza")
                        .WithMany("PizzaOrders")
                        .HasForeignKey("PizzaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("pizza_data.models.PizzaOrderDetail", b =>
                {
                    b.HasOne("pizza_data.models.PizzaOrder", "PizzaOrder")
                        .WithMany("Orders")
                        .HasForeignKey("PizzaOrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("pizza_data.models.Topping", "Topping")
                        .WithMany()
                        .HasForeignKey("ToppingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("pizza_data.models.Topping", b =>
                {
                    b.HasOne("pizza_data.models.Pizza", "Pizza")
                        .WithMany("Toppings")
                        .HasForeignKey("PizzaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
